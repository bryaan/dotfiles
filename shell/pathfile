############################################################################
# pathfile - Set your $PATH here and never be left wondering again.
############################################################################

[ "Linux" = "$(uname)" ] && platform="linux" || platform="macos"
[ "x86_64" = "$(uname -m)" ] && arch="amd64" || arch="386"

# set -x

# setpath /usr/local/bin /usr/sbin
# set PATH /usr/local/bin /usr/sbin $PATH


# FIXME For some very strange reason on macos + bash the directory test
# will not work for any of these paths:
# /usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin
function checkIfDirectory() {
    if [ -d "$1" ]; then
        return 1
    else
        return 0
    fi
}

# Checks that the path exists before adding it.
function append_path() {
  local dir="$1"
  # FIXME see `checkIfDirectory`
  # checkIfDirectory $dir && PATH=$PATH:$dir
  TMPPATH="$TMPPATH:$dir"
}

# Clear current TMPPATH
TMPPATH=''

############################################################################
# Linux
############################################################################

if [[ "$platform" == 'linux' ]]; then


###################################
# Misc
###################################

# Rust / Cargo
export CARGO_HOME="$HOME/.cargo"
append_path $CARGO_HOME/bin

# Git v2
export GIT_HOME=/usr/local/src/git-2.15.1
append_path $GIT_HOME/bin

# Java
export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk
append_path $JAVA_HOME/bin

###################################
# User
###################################

# User's private paths
append_path "$HOME/bin"
append_path "$HOME/.local/bin"

###################################
# System
###################################

# /opt  For non-system software.
# /opt/local For un-vc'd, pre-compiled software.
# /opt/local/bin For the binaries.
# /opt/local/sbin For administrative binaries.

# For non-system bundled software binaries.
append_path /opt/local/bin
# For administrative non-system bundled software binaries.
append_path /opt/local/sbin

# There should be no /opt/bin.  The local route is for stuff we don't
# want to pull in via git.  If we do, then it goes in /opt/foo-project.
# Config goes in /etc/opt/foo-project/xx.conf
# Logs go in /var/opt/foo-project/xx.log

append_path /usr/local/bin
append_path /usr/bin/
append_path /bin
append_path /usr/local/sbin
append_path /usr/sbin
append_path /sbin

fi

############################################################################
# Mac
############################################################################

if [[ "$platform" == 'macos' ]]; then

# Default Mac Path
# Temporarily set to run basic shell utilities below.
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin

# User's private paths
append_path $HOME/bin
# TODO Remove, transfer to .local/bin
# Remove bc .local is supposed to be a directory copy of /usr/local
# so we can put tings liek etc and logs and not need to modify programs to use dots, just change root path.
append_path $HOME/.local/bin

# Rust's cargo installed binaries.
append_path $HOME/.cargo/bin


# Default Mac Path
append_path /usr/local/bin
append_path /usr/bin
append_path /bin
append_path /usr/sbin
append_path /sbin

fi

# Remove first `:` from PATH
TMPPATH=${TMPPATH#?}

# Final explicit export
export PATH="$TMPPATH"