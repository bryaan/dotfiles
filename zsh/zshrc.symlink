# TODO `zplug` look like best package man.  however oh-my-zsh also has its own way, zplug allows importing ohmyzsh functions without running ohmyzsh.
# If we want Zplug then eventually elim oh-my-zsh

# https://github.com/unixorn/awesome-zsh-plugins


# Since its sourced in .zshenv which is always sourced its not needed here.
# Also this file should only contain things specific to interactive shells.
# source ~/.devbashrc

# Load custom functions from $ZSH/functions TODO Add this folder to backups.
autoload tmux-session




# ZSH_THEME=amuse
# ZSH_THEME=absolute
ZSH_THEME=robbyrussell

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=/home/bryan/.oh-my-zsh




# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  common-aliases
  git
  python
  scala
  docker
  tmuxinator
  sudo
  sublime
  tig
  tugboat
  yarn
  npm
  docker-compose
  zsh-autosuggestions
  zsh-completions
  kubectl
)

# Reload Completeions
autoload -U compinit && compinit


# Load oh-my-zsh stuff.
source $ZSH/oh-my-zsh.sh

################################################3
# Fuzzy Search / cd
################################################

# Enabled 'enhancd' - interactive `cd`
# source $ZSH/custom/plugins/enhancd/init.sh

# Auto added by `fzf`
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# zsh-interactive-cd
source $ZSH/custom/plugins/zsh-interactive-cd/zsh-interactive-cd.plugin.zsh

# plugin=  history-search-multi-word 
# This plugin uses ctrl-R but `fzf` overrode that binding, 
# and it does its own thing anyway, so we dont need this plugin.



# Prompt Custimization
# https://code.tutsplus.com/tutorials/how-to-customize-your-command-prompt--net-24083

# # If I'm in the home directory, I don't want to see /Users/andrew, I want to see ~ instead. So, here's that function:
# function get_pwd() {
#   echo "${PWD/$HOME/~}"
# }

# ZSH_THEME_GIT_PROMPT_PREFIX="[git:"
# ZSH_THEME_GIT_PROMPT_SUFFIX="]$reset_color"
# ZSH_THEME_GIT_PROMPT_DIRTY="$fg[red]+"
# ZSH_THEME_GIT_PROMPT_CLEAN="$fg[green]"

# function git_prompt_info() {
#   ref=$(git symbolic-ref HEAD 2> /dev/null) || return
#   echo "$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_PREFIX$(current_branch)$ZSH_THEME_GIT_PROMPT_SUFFIX"
# }

# # If file doesn't exist emit ''.
# function battery_charge() {
#     if [ -e ~/bin/batcharge.py ]
#     then
#         echo `python ~/bin/batcharge.py`
#     else
#         echo '';
#     fi
# }

# # Calculate central spacing.
# function put_spacing() {
#   local git=$(git_prompt_info)
#   if [ ${#git} != 0 ]; then
#       ((git=${#git} - 10))
#   else
#       git=0
#   fi

#   local bat=$(battery_charge)
#   if [ ${#bat} != 0 ]; then
#       ((bat = ${#bat} - 18))
#   else
#       bat=0
#   fi

#   local termwidth
#   (( termwidth = ${COLUMNS} - 3 - ${#HOST} - ${#$(get_pwd)} - ${bat} - ${git} ))

#   local spacing=""
#   for i in {1..$termwidth}; do
#       spacing="${spacing} "
#   done
#   echo $spacing
# }

# export PROMPT='
# $fg[cyan]%m: $fg[yellow]$(get_pwd)$(put_spacing)$(git_prompt_info)
# $reset_color$(echo -e "\u03BB") '


# export PROMPT=$PROMPT'
# $fg[magenta]$(echo -e "\u03BB")$reset_color '

# export PROMPT='$fg[cyan]%c $(git_prompt_info)
# $fg[magenta]$(echo -e "\u03BB")$reset_color '


# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"



# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
# Load RVM into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
# rvm use ruby-2.4.1


# http://zsh.sourceforge.net/Doc/Release/Options.html#History
# Disable shared history.
# Must come at end of .zshrc
# Reason we need this is oh-my-zsh enables it:  master/lib/history.zsh
unsetopt share_history
unsetopt inc_append_history
setopt EXTENDED_HISTORY # Add additional data to history like timestamp

# When searching for history entries in the line editor, do not display duplicates of a line previously found, even if the duplicates are not contiguous.
setopt HIST_FIND_NO_DUPS

# Remove superfluous blanks from each command line being added to the history list.
setopt HIST_REDUCE_BLANKS

setopt NO_HIST_BEEP # Don't beep

# Try to correct the spelling of commands.
setopt CORRECT
# Try to correct the spelling of all arguments in a line.
setopt CORRECT_ALL


# Output hexadecimal numbers in the standard C format, for example ‘0xFF’ instead of the usual ‘16#FF’.
# If the option OCTAL_ZEROES is also set octal numbers will be treated similarly and hence appear as ‘077’
setopt C_BASES
setopt OCTAL_ZEROES

# Debug option. zsh will print an informational message announcing the name of each file it loads.
unsetopt SOURCE_TRACE
