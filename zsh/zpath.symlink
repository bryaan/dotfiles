

unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
esac


# Checks that the path exists before adding it.
append_path() {
  [ -d $1  ] && PATH=$PATH:$1
}

# Clear current PATH
# [solved] PROBLEM When a program is installed and adds itself, we wont know until we get errors and debug.
# But really not a big deal since docs should say what to add to path.
# And also homebrew at the end.
# unset PATH
export PATH=''

# Git v2
append_path /usr/local/src/git-2.15.1/bin

# Java and SBT
export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk
append_path $JAVA_HOME/bin
append_path /home/bryan/bin/sbt


############################################################################
# Golang
############################################################################

# # Location where go is installed.
# export GOROOT=/opt/go-1.9.2
# # Location of project directory.  This public one is for any 3rd party forked go repos.
# export GOPATH_PUBLIC=$HOME/src/go/public
# # GOPATH="/home/peter/gopath:/home/peter/public/gopath"
# export GOPATH=GOPATH_PUBLIC

# TODO Check this is the correct original setting.
export ASDF_INSTALL_PATH=$HOME/.asdf/installs

# TODO doesnt seem right that GOPATH path has a go version number in it.
# Especially since newer version are backwards compat.
# So use a versionless GOPATH.  Check idea on net.

# TODO Really important we ask asdf, bc version is changed thru asdf.
# Would be a pain to also change here.
# Best thing would be to ask asdf
# $(asdf which golang)
# problem is 1. for some reason it has an erronous /golang appended to it.
# 2. not sure if a reload is done in an asdf go project dir if it will use global one or local one.

# Where go binary is at.
export GOROOT=$ASDF_INSTALL_PATH/golang/1.9.2/go

# This is for my packages.
# export GOPATH_LOCAL=$ASDF_INSTALL_PATH/golang/packages

# This is for 3rd party packages.
export GOPATH_EXT=$ASDF_INSTALL_PATH/golang/1.9.2/packages

# The GOPATH environment variable lists places to look for Go code.
# On Unix, the value is a colon-separated string.
export GOPATH=$GOPATH_EXT

# Add golang to PATH.
append_path $GOPATH/bin
append_path $GOROOT/bin


############################################################################
# Rust
############################################################################

append_path "$HOME/.cargo/bin"

############################################################################
# Qt
############################################################################

# export PATH=$PATH:/usr/lib64/qt-3.3/bin

############################################################################
# FZF - Fuzzy Search for ZSH
############################################################################

append_path /home/bryan/.fzf/bin


############################################################################
#  Linux Brew
############################################################################

# export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH"
# PATH="$HOME/.linuxbrew/bin:$PATH"

############################################################################
# User
############################################################################

# User's private paths
append_path "$HOME/bin"
append_path "$HOME/.local/bin"

############################################################################
# System
############################################################################

# /opt  For non-system software.
# /opt/local For un-vc'd, pre-compiled software.
# /opt/local/bin For the binaries.
# /opt/local/sbin For administrative binaries.

# For non-system bundled software binaries.
append_path /opt/local/bin
# For administrative non-system bundled software binaries.
append_path /opt/local/sbin

# There should be no /opt/bin.  The local route is for stuff we don't
# want to pull in via git.  If we do, then it goes in /opt/foo-project.
# Config goes in /etc/opt/foo-project/xx.conf
# Logs go in /var/opt/foo-project/xx.log


append_path /usr/local/bin
append_path /usr/local/sbin
append_path /usr/bin
append_path /usr/sbin
append_path /bin
append_path /sbin


################################################
# Mac
################################################

if [[ "$machine" == 'Mac' ]]; then

export PATH=''

# User's private paths
append_path "$HOME/bin" # TODO Remove, transfer to .local/bin
# Remove bc .local is supposed to be a directory copy of /usr/local
# so we can put tings liek etc and logs and not need to modify programs to use dots, just change root path.
append_path "$HOME/.local/bin"

# Rust's cargo installed binaries.
append_path $HOME/.cargo/bin

# Golang installed with homebrew required env vars.
# brew install go --cross-compile-common
export GOPATH=$HOME/golang
export GOROOT=/usr/local/opt/go/libexec
append_path $GOPATH/bin
append_path $GOROOT/bin

# TODO Homebrew installed, so it should be available in /usr/local/bin, no?
# So shouldnt need this.
append_path /usr/local/opt/fzf/bin

append_path /usr/local/bin
append_path /usr/bin:/bin
append_path /usr/sbin:/sbin

fi

# Final explicit export
export PATH=$PATH